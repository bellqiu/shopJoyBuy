package com.spshop.model;

import java.util.ArrayList;
import java.util.List;

import com.spshop.model.enums.SelectType;

public class ProductOption extends Component{

	/**
	 * 
	 */
	private static final long serialVersionUID = 8504143946515106133L;
	
	private String description;
	
	private List<ProductOptionItem> items;
	
	private String strSelectType;
	
	private String defaultValue;
	
	private Product product;
	public ProductOption() {
		
	}
	public ProductOption(ProductOption productOption) {
		super(productOption);
	}
	public static ProductOption createWithItem(){
		ProductOption option = new ProductOption();
		option.setName("New Option");
		option.setSelectType(SelectType.SINGLE_LIST);
		ArrayList<ProductOptionItem> items = new ArrayList<ProductOptionItem>();
		ProductOptionItem item = new ProductOptionItem();
		item.setName("Item 1");
		items.add(item);
		option.setItems(items);
		return option;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public List<ProductOptionItem> getItems() {
		return items;
	}

	public void setItems(List<ProductOptionItem> items) {
		this.items = items;
	}

	public void setSelectType(SelectType selectType) {
		this.strSelectType= selectType.getValue();
	}

	public SelectType getSelectType() {
		if(strSelectType==null){
			return null;
		}
		return SelectType.valueOf(strSelectType.toUpperCase());
	}

	public void setProduct(Product product) {
		this.product = product;
	}

	public Product getProduct() {
		return product;
	}

	public void setStrSelectType(String strSelectType) {
		this.strSelectType = strSelectType;
	}

	public String getStrSelectType() {
		return strSelectType;
	}

	public void setDefaultValue(String defaultValue) {
		this.defaultValue = defaultValue;
	}

	public String getDefaultValue() {
		return defaultValue;
	}

	/**
	 * @autogenerated by CodeHaggis (http://sourceforge.net/projects/haggis)
	 * clone
	 * @return Object
	 */
	public ProductOption clone(boolean withProduct) {
		ProductOption obj = null;
		obj = new ProductOption(this);
		if (this.description != null) {
			/* Does not have a clone() method */
			obj.description = this.description;
		}
		if (this.items != null) {
			obj.items = new ArrayList<ProductOptionItem>();
			if(null!=this.items){
				for (ProductOptionItem c : this.items) {
					ProductOptionItem s = c.clone(false);
					s.setOption(obj);
					obj.items.add(s);
				}
			}
		}
		if (this.strSelectType != null) {
			/* Does not have a clone() method */
			obj.strSelectType = this.strSelectType;
		}
		if (this.defaultValue != null) {
			/* Does not have a clone() method */
			obj.defaultValue = this.defaultValue;
		}
		if(withProduct){
			if (this.product != null) {
				obj.product = (Product) this.product.clone();
			}
		}
		
		return obj;
	}
	public ProductOption clone(){
		return clone(true);
	}

	
}
