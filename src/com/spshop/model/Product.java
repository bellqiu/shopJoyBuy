package com.spshop.model;

import java.util.ArrayList;
import java.util.List;

import com.spshop.model.enums.BUConsts;
import com.spshop.model.enums.SelectType;

public class Product extends Component{

	/**
	 * 
	 */
	private static final long serialVersionUID = -84296171648012884L;
	private String keywords;
	private int hit;
	private int priority;
	private boolean deleted;
	private int rate;
	private int commentsTotal;
	private String abstractText;
	private String detail;
	private int weight;
	private String title;
	private String rateCount;
	private CutOff cutOff;
	private List<ProductOption> options = new ArrayList<ProductOption>();
	private List<ProductProperty> properties;
	private List<Image> images;
	private List<Category> categories;
	private long tabProductKey;
	private double price;
	private double actualPrice;
	private boolean showComments;
	private String manualKey;
	private boolean showlikeButton;
	private String productUrl;
	private int optType;
	private String tags;
	
	public Product() {
		ProductOption colorOp = new ProductOption();
		colorOp.setProduct(this);
		colorOp.setName("Color");
		colorOp.setSelectType(SelectType.COLOR_SINGLE);
		
		ProductOptionItem item = new ProductOptionItem();
		item.setName(BUConsts.CUSTOMIZED_SIZE);
		item.setValue("Customized");
		
		ProductOption sizeOp = new ProductOption();
		sizeOp.setName("Size");
		sizeOp.setSelectType(SelectType.SINGLE_LIST);
		sizeOp.setItems(new ArrayList<ProductOptionItem>());
		sizeOp.getItems().add(item);
		
		sizeOp.setProduct(this);
		
		ProductOption qty = new ProductOption();
		qty.setSelectType(SelectType.INPUT_TEXT);
		qty.setProduct(this);
		qty.setName("Qty");
		
		this.getOptions().add(colorOp);
		this.getOptions().add(sizeOp);
		this.getOptions().add(qty);
		
	}
	public Product(Product product) {
		super(product);
	}
	public String getKeywords() {
		return keywords;
	}
	public void setKeywords(String keywords) {
		this.keywords = keywords;
	}
	public int getHit() {
		return hit;
	}
	public void setHit(int hit) {
		this.hit = hit;
	}
	public int getPriority() {
		return priority;
	}
	public void setPriority(int priority) {
		this.priority = priority;
	}
	public int getRate() {
		return rate;
	}
	public void setRate(int rate) {
		this.rate = rate;
	}
	public int getCommentsTotal() {
		return commentsTotal;
	}
	public void setCommentsTotal(int commentsTotal) {
		this.commentsTotal = commentsTotal;
	}
	public String getAbstractText() {
		return abstractText;
	}
	public void setAbstractText(String abstractText) {
		this.abstractText = abstractText;
	}
	public String getDetail() {
		return detail;
	}
	public void setDetail(String detail) {
		this.detail = detail;
	}
	public int getWeight() {
		return weight;
	}
	public void setWeight(int weight) {
		this.weight = weight;
	}
	public CutOff getCutOff() {
		return cutOff;
	}
	public void setCutOff(CutOff cutOff) {
		this.cutOff = cutOff;
	}
	public List<ProductOption> getOptions() {
		return options;
	}
	public void setOptions(List<ProductOption> options) {
		this.options = options;
	}
	public List<ProductProperty> getProperties() {
		return properties;
	}
	public void setProperties(List<ProductProperty> properties) {
		this.properties = properties;
	}
	public void setTitle(String title) {
		this.title = title;
	}
	public String getTitle() {
		return title;
	}
	public void setRateCount(String rateCount) {
		this.rateCount = rateCount;
	}
	public String getRateCount() {
		return rateCount;
	}
	public void setImages(List<Image> images) {
		this.images = images;
	}
	public List<Image> getImages() {
		return images;
	}
	
	public String getManualKey() {
		return manualKey;
	}
	public void setManualKey(String manualKey) {
		this.manualKey = manualKey;
	}
	
	public Product deepCopy(){
		Product product = clone();
		
		product.setId(0);
		if(null!=getProperties()){
			List<ProductProperty> props = new ArrayList<ProductProperty>();
			for(ProductProperty property : getProperties()){
				property.setId(0);
				props.add(property);
			}
			product.setProperties(props);
		}
		
		if(null!=getOptions()){
			List<ProductOption> options = new ArrayList<ProductOption>();
			for(ProductOption option : getOptions()){
				option.setId(0);
				if(null!=option.getItems()){
					List<ProductOptionItem> optionItems = new ArrayList<ProductOptionItem>();
					for(ProductOptionItem item : option.getItems()){
						item.setId(0);
						optionItems.add(item);
					}
				}
				options.add(option);
			}
			product.setOptions(options);
		}
		
		return product;
	}
	
	/**
	 * @autogenerated by CodeHaggis (http://sourceforge.net/projects/haggis)
	 * clone
	 * @return Object
	 */
	public Product clone() {
		Product obj = null;
		obj = new Product(this);
		if (this.keywords != null) {
			/* Does not have a clone() method */
			obj.keywords = this.keywords;
		}
		obj.hit = this.hit;
		obj.priority = this.priority;
		obj.rate = this.rate;
		obj.price = this.price;
		obj.actualPrice = this.actualPrice;
		obj.showComments = this.showComments;
		obj.commentsTotal = this.commentsTotal;
		obj.tabProductKey = this.tabProductKey;
		obj.showlikeButton = this.showlikeButton;
		obj.manualKey = this.manualKey;
		obj.optType = this.optType;
		obj.deleted = this.deleted;

		if (this.abstractText != null) {
			/* Does not have a clone() method */
			obj.abstractText = this.abstractText;
		}
		
		if (this.detail != null) {
			/* Does not have a clone() method */
			obj.detail = this.detail;
		}
		obj.weight = this.weight;
		if (this.title != null) {
			/* Does not have a clone() method */
			obj.title = this.title;
		}
		if (this.rateCount != null) {
			/* Does not have a clone() method */
			obj.rateCount = this.rateCount;
		}
		if (this.cutOff != null) {
			obj.cutOff = (CutOff) this.cutOff.clone();
		}
		
		if (this.tags != null) {
			obj.tags = this.tags;
		}
		
		if (this.options != null) {
			obj.options = new ArrayList<ProductOption>();
			if(null!=this.options){
				for (ProductOption c : this.options) {
					c.setProduct(obj);
					ProductOption s = c.clone(false);
					obj.options.add(s);
				}
			}
		}
		
		if (this.categories != null) {
			obj.categories = new ArrayList<Category>();
			if(null!=this.categories){
				for (Category c : this.categories) {
					Category s = c.clone();
					obj.categories.add(s);
				}
			}
		}
		
		if (this.properties != null) {
			obj.properties = new ArrayList<ProductProperty>();
			if(null!=this.properties){
				for (ProductProperty c : this.properties) {
					ProductProperty s = c.clone(false);
					s.setProduct(obj);
					obj.properties.add(s);
				}
			}
		}
		if (this.images != null) {
			obj.images = new ArrayList<Image>();
			if(null!=this.images){
				for (Image c : this.images) {
					Image s = c.clone();
					obj.images.add(s);
				}
			}
		}
		return obj;
	}
	public void setCategories(List<Category> categories) {
		this.categories = categories;
	}
	public List<Category> getCategories() {
		return categories;
	}
	public long getTabProductKey() {
		return tabProductKey;
	}
	public void setTabProductKey(long tabProductKey) {
		this.tabProductKey = tabProductKey;
	}
	public double getPrice() {
		return price;
	}
	public void setPrice(double price) {
		this.price = price;
	}
	public double getActualPrice() {
		return actualPrice;
	}
	public void setActualPrice(double actualPrice) {
		this.actualPrice = actualPrice;
	}
	public boolean isShowComments() {
		return showComments;
	}
	public void setShowComments(boolean showComments) {
		this.showComments = showComments;
	}
	public boolean isShowlikeButton() {
		return showlikeButton;
	}
	public void setShowlikeButton(boolean showlikeButton) {
		this.showlikeButton = showlikeButton;
	}
	/**
	 * @return the productUrl
	 */
	public String getProductUrl() {
		return productUrl;
	}
	/**
	 * @param productUrl the productUrl to set
	 */
	public void setProductUrl(String productUrl) {
		this.productUrl = productUrl;
	}
	public int getOptType() {
		return optType;
	}
	public void setOptType(int optType) {
		this.optType = optType;
	}
	public String getTags() {
		return tags;
	}
	public void setTags(String tags) {
		this.tags = tags;
	}
	public boolean isDeleted() {
		return deleted;
	}
	public void setDeleted(boolean deleted) {
		this.deleted = deleted;
	}
	
}
